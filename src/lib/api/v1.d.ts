/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/rooms": {
    get: operations["findAll"];
  };
  "/poster/{id}": {
    get: operations["findPosterById"];
  };
  "/films": {
    get: operations["findAll_1"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    BasicScreening: {
      /** Format: int32 */
      id?: number;
      projectionType?: string;
      resolution?: string;
      /** Format: date-time */
      date?: string;
      /** Format: int32 */
      roomId?: number;
      /** Format: int32 */
      filmId?: number;
    };
    Film: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      length?: number;
      /** Format: int32 */
      ageRating?: number;
    };
    Room: {
      /** Format: int32 */
      id?: number;
      name?: string;
    };
    RoomWithBasicScreenings: {
      room?: components["schemas"]["Room"];
      basicScreenings?: components["schemas"]["BasicScreening"][];
    };
    RoomsWithFilmsAndScreenings: {
      roomsWithScreenings?: components["schemas"]["RoomWithBasicScreenings"][];
      films?: components["schemas"]["Film"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  findAll: {
    parameters: {
      query?: {
        date?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["RoomsWithFilmsAndScreenings"];
        };
      };
    };
  };
  findPosterById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "image/jpeg": string[];
        };
      };
    };
  };
  findAll_1: {
    parameters: {
      query?: {
        isOnlyFutureFilms?: boolean;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Film"][];
        };
      };
    };
  };
}
